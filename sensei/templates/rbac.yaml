---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "sensei.fullname" . }}
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      # delete and deletecollection are required only for 'patronictl remove'
      - delete
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - patch
      - update
      # the following three privileges are necessary only when using endpoints
      - create
      - list
      - watch
      # delete and deletecollection are required only for for 'patronictl remove'
      - delete
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  # The following privilege is only necessary for creation of headless service
  # for patronidemo-config endpoint, in order to prevent cleaning it up by the
  # k8s master. You can avoid giving this privilege by explicitly creating the
  # service like it is done in this manifest (lines 2..10)
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "sensei.fullname" . }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "sensei.fullname" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "sensei.serviceAccountName" . }}

# Following privileges are only required if deployed not in the "default"
# namespace and you want Patroni to bypass kubernetes service
# (PATRONI_KUBERNETES_BYPASS_API_SERVICE=true)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "sensei.fullname" . }}-ep-access
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    resourceNames:
      - kubernetes
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "sensei.fullname" . }}-ep-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "sensei.fullname" . }}-ep-access
subjects:
  - kind: ServiceAccount
    name: {{ include "sensei.serviceAccountName" . }}
    # The namespace must be specified explicitly.
    # If deploying to the different namespace you have to change it.
    namespace: default

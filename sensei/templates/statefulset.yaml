---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  # name: &cluster_name patronidemo
  name: {{ include "sensei.fullname" . }}
  labels:
    {{- include "sensei.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "sensei.fullname" . }}
  selector:
    matchLabels:
      {{- include "sensei.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sensei.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "sensei.serviceAccountName" . }}
      containers:
        - name: {{ include "sensei.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /readiness
              port: 8008
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8008
              protocol: TCP
              name: metrics
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: /home/postgres/pgdata
              name: pgdata
          env:
            - name: PATRONI_KUBERNETES_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PATRONI_KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PATRONI_KUBERNETES_BYPASS_API_SERVICE
              value: "true"
            - name: PATRONI_KUBERNETES_USE_ENDPOINTS
              value: "true"
            - name: PATRONI_KUBERNETES_LABELS
              # value: "{ cluster-name: {{ include "sensei.fullname" . }} }"
              value: {{ include "sensei.labels" . | fromYaml | toJson | quote }}
            - name: PATRONI_SUPERUSER_USERNAME
              value: {{ .Values.creds.superuser.username }}
            - name: PATRONI_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sensei.fullname" . }}
                  key: superuser-password
            - name: PATRONI_REPLICATION_USERNAME
              value: {{ .Values.creds.replication.username }}
            - name: PATRONI_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sensei.fullname" . }}
                  key: replication-password
            - name: PATRONI_SCOPE
              value: {{ include "sensei.fullname" . }}
            - name: PATRONI_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PATRONI_POSTGRESQL_DATA_DIR
              value: /home/postgres/pgdata/pgroot/data
            - name: PATRONI_POSTGRESQL_PGPASS
              value: /tmp/pgpass
            - name: PATRONI_POSTGRESQL_LISTEN
              value: "0.0.0.0:5432"
            - name: PATRONI_RESTAPI_LISTEN
              value: "0.0.0.0:8008"
      terminationGracePeriodSeconds: 0
      volumes:
        - name: pgdata
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
#  volumeClaimTemplates:
#  - metadata:
#      labels:
#        application: spilo
#        spilo-cluster: *cluster_name
#      annotations:
#        volume.alpha.kubernetes.io/storage-class: anything
#      name: pgdata
#    spec:
#      accessModes:
#      - ReadWriteOnce
#      resources:
#        requests:
#          storage: 5Gi

---
